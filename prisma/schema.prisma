// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  email       String        @unique
  password    String
  UserToTitle UserToTitle[]
  UserMedal   UserMedal[]
}

model UserToTitle {
  user_id   Int
  title     String
  createdAt DateTime  @default(now())
  deletedAt DateTime?
  User      User      @relation(fields: [user_id], references: [id])
  Title     Title     @relation(fields: [title], references: [title])
  IsChosen  Boolean
  Valid     Boolean

  @@id([user_id, title])
}

model Title {
  title       String        @id
  description String?
  UserToTitle UserToTitle[]
}

model Medal {
  name      String      @id
  condition String
  UserMedal UserMedal[]
}

model MedalInstance {
  medal_id   Int       @id @default(autoincrement())
  user_id    Int
  medal_name String
  UserMedal  UserMedal @relation(fields: [user_id, medal_name], references: [user_id, medal_name])
  createdAt  DateTime  @default(now())
  deletedAt  DateTime?
}

model UserMedal {
  user_id       Int
  medal_name    String
  total_level   Int @default(0)
  User          User            @relation(fields: [user_id], references: [id])
  Medal         Medal           @relation(fields: [medal_name], references: [name])
  MedalInstance MedalInstance[]

  @@id([user_id, medal_name])
}

enum Elos {
  Bronze
  Prata
  Ouro
  Diamante
  Sexo
}
